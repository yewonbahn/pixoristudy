{"version":3,"sources":["Routes/Home.js","Routes/Search.js","Components/PlayButton.jsx","helpers/instruments.js","Components/Square.jsx","Components/InstrumentRow.jsx","Components/Tempo.jsx","Components/StopButton.jsx","Components/ColorPicker.styles.js","App.styles.js","Components/ColorPicker.js","Routes/Maker.js","helpers/useBPM.js","Components/Menubar.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Maker","useStyles","makeStyles","theme","button","margin","spacing","PlayButton","props","classes","isPlaying","Button","variant","color","className","disabled","onClick","startIcon","instruments","name","sound","pattern","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","arr1","Array","from","fill","Square","selectedColor","useState","pixelColor","setPixelColor","oldColor","setOldColor","canChangeColor","setCanChangeColor","toggle","setToggle","Fragment","style","background","padding","position","Howl","src","column","html5","play","Howler","volume","updateGrid","row","splice","handleClick","onMouseEnter","onMouseLeave","InstrumentRow","squares","i","push","key","instrumentSound","instrumentColor","instrumentName","Tempo","label","type","min","max","value","onChange","onTempoChange","backgroundColor","border","borderColor","StopButton","createUseStyles","app","display","flexDirection","width","height","justifyContent","alignItems","fontFamily","colorSwatchContainer","colorSwatch","outline","cursor","chatString","maxWidth","wordWrap","colorPicker","ColorPicker","currentColor","onSetColor","event","target","Home","document","getElementById","querySelector","panelRef","useRef","setColor","setIsPlaying","tempo","setTempo","playHeadArray","setPlayHeadArray","counter","setCounter","grid","setGrid","togglePlay","beats","playHeadLoop","squareToAnimate","previousSquare","classList","remove","add","playSounds","array","length","source","useEffect","interval","setInterval","soundArr","j","soundSrc","loop","prevState","clearInterval","map","square","id","instrumentRows","instrument","clonedObj","arrayToPassSetGrid","console","log","playHeadComponent","eventValue","parseInt","handleTempoChange","onChangeComplete","hex","ref","alert","html2canvas","onrendered","canvas","a","toDataURL","Header","styled","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","to","Menubar","path","exact","component","Search","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.8ce2944b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Maker() {\r\n    return (\r\n        <div>\r\n            hi\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Maker","export default () => \"Search\";\r\n","import React, { useEffect } from 'react';\r\nimport '../styles/index.css';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport PlayCircleFilledWhiteIcon from '@material-ui/icons/PlayCircleFilledWhite';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst PlayButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n    return(\r\n      <div>\r\n      {props.isPlaying ? (<Button \r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      className={classes.button}\r\n      disabled={props.isPlaying}\r\n      onClick={props.onClick}>Playing..</Button>) : (<Button \r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        startIcon={<PlayCircleFilledWhiteIcon />}\r\n        onClick={props.onClick}>Play</Button>)}\r\n      </div>\r\n    )\r\n  }\r\nexport default PlayButton;","// objects to represent each instrument\r\n\r\n\r\nexport const instruments = [\r\n  { name: 'Clap', sound: \"./DrumSamples/Claps/Clap1.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#b50000' },\r\n  { name: 'Hi-hat (open)', sound: \"./DrumSamples/OpenHats/OpenHiHat01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#bcc200' },\r\n  { name: 'Hi-hat (closed)', sound: \"./DrumSamples/ClosedHats/HiHat01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#ff00ff' },\r\n  { name: 'Snare 2', sound: \"./DrumSamples/AltSnare1/AltSD25.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#00DACD' },\r\n  { name: 'Snare 1', sound: \"./DrumSamples/MainSnare/Snare1.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false },color: '#ff7700' },\r\n  { name: 'Kick', sound: \"./DrumSamples/Kicks/KickDrum01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#00990a' },\r\n  { name: 'Bassline', sound: \"./BassSamples/HighE-BassNote.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: 'blue' },\r\n\r\n  { name: 'Clap', sound: \"./DrumSamples/Claps/Clap1.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#b50000' },\r\n  { name: 'Hi-hat (open)', sound: \"./DrumSamples/OpenHats/OpenHiHat01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#bcc200' },\r\n  { name: 'Hi-hat (closed)', sound: \"./DrumSamples/ClosedHats/HiHat01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#ff00ff' },\r\n  { name: 'Snare 2', sound: \"./DrumSamples/AltSnare1/AltSD25.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#00DACD' },\r\n  { name: 'Snare 1', sound: \"./DrumSamples/MainSnare/Snare1.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false },color: '#ff7700' },\r\n  { name: 'Kick', sound: \"./DrumSamples/Kicks/KickDrum01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#00990a' },\r\n  { name: 'Bassline', sound: \"./BassSamples/HighE-BassNote.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: 'blue' },\r\n  { name: 'Clap', sound: \"./DrumSamples/Claps/Clap1.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#b50000' },\r\n  { name: 'Hi-hat (open)', sound: \"./DrumSamples/OpenHats/OpenHiHat01.wav\", pattern: {0: false, 1: false, 2: false, 3: false, 4: false, 5: false, 6: false, 7: false, 8: false, 9: false, 10: false, 11: false, 12: false, 13: false, 14: false, 15: false }, color: '#bcc200' }\r\n]\r\n // returns different sound pointer depending on the position of the counter on the grid\r\n export function getBassNote(position) {\r\n  if(position >= 14) {\r\n    return \"./BassSamples/G-BassNote.wav\";  \r\n  }\r\n  if(position >= 12){\r\n    return \"./BassSamples/A-BassNote.wav\";\r\n  }\r\n  if(position >= 10){\r\n    return \"./BassSamples/B-BassNote.wav\";\r\n  }\r\n  if(position >= 8){\r\n    return \"./BassSamples/D-BassNote.wav\";\r\n  }\r\n  if(position >= 6) {\r\n    return \"./BassSamples/HighE-BassNote.wav\";   \r\n  }\r\n  if(position >= 4){\r\n    return \"./BassSamples/D-BassNote.wav\";\r\n  }\r\n  if(position >= 2){\r\n    return \"./BassSamples/HighE-BassNote.wav\";   \r\n  }\r\n  if(position >= 0){\r\n    return \"./BassSamples/HighE-BassNote.wav\";  \r\n  }\r\n  return \"./BassSamples/HighE-BassNote.wav\";\r\n}","import React, { useState } from 'react';\r\nimport '../styles/index.css';\r\nimport { Howl, Howler } from 'howler';\r\nimport { getBassNote } from '../helpers/instruments'\r\n\r\n\r\nconst arr1 = Array.from(Array(16), () => new Array(32).fill(0));\r\n\r\nconst Square = (props) => {\r\n\r\n  const { selectedColor } = props.color;\r\n\r\n  const [pixelColor, setPixelColor] = useState(\"#fff\");\r\n  const [oldColor, setOldColor] = useState(pixelColor);\r\n  const [canChangeColor, setCanChangeColor] = useState(true);\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n \r\n\r\n\r\n \r\n\r\n  const handleClick = () => {\r\n    setToggle(!toggle);\r\n    if(!toggle) {\r\n      let sound = new Howl({\r\n        src: [(props.name === 'Bassline') ? getBassNote(props.column) : props.sound],\r\n        html5: true,\r\n    \r\n      });\r\n\r\n      sound.play();\r\n      Howler.volume(1);\r\n\r\n      \r\n    }\r\n    setPixelColor(props.color);\r\n    setCanChangeColor(false);\r\n    \r\n    // need to pass row, col, toggle back up to the grid in App.js\r\n\r\n\r\n    props.updateGrid(props.row, props.column, !toggle,props.color);\r\n    arr1[props.row].splice(props.column,1,props.color)\r\n  }\r\n\r\n  function resetColor() {\r\n    if (canChangeColor) {\r\n      setPixelColor(oldColor);\r\n    }\r\n\r\n    setCanChangeColor(true);\r\n  }\r\n  function changeColorOnHover() {\r\n    setOldColor(pixelColor);\r\n    setPixelColor(selectedColor);\r\n \r\n  }\r\n\r\n  \r\n  //TODO: Move in-line styles out of components\r\n  return (\r\n    <React.Fragment>\r\n\r\n    <td className=\"tCell\"\r\n      style={toggle ? { background: pixelColor, padding: '15px' } : { background: '#fffff7', padding: '15px' }}\r\n    \r\n      onClick={() =>{ handleClick();}}\r\n\r\n      onMouseEnter={changeColorOnHover}\r\n      onMouseLeave={resetColor}/>\r\n      \r\n   \r\n      </React.Fragment>\r\n \r\n\r\n    )\r\n  \r\n    }\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\nimport '../styles/index.css';\r\n\r\nconst InstrumentRow = (props) => {\r\n   \r\n  const squares = [];\r\n  for (let i = 0; i < 32; i++) {\r\n    squares.push(<Square  key={i + props.row} row={props.row} column={i} sound={props.instrumentSound} pattern={props.pattern[i]} color={props.instrumentColor} name={props.instrumentName} updateGrid={props.updateGrid}/>);\r\n}\r\n  return (\r\n    <tr>\r\n      <td className=\"instrument\">\r\n        \r\n        {props.instrumentName}\r\n      </td>\r\n      {squares}\r\n    </tr>\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default InstrumentRow;","import React, { useState } from 'react';\r\nimport '../styles/index.css';\r\n\r\nconst Tempo = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <label className=\"temStyle\">Tem<span className=\"poStyle\">po</span></label>\r\n      <input\r\n        className=\"tempoBorder\"\r\n        label='Tempo'\r\n        type='number'\r\n        min='40'\r\n        max='240'\r\n        value={props.value}\r\n        onChange={props.onTempoChange}\r\n      />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Tempo;","import React from 'react';\r\nimport '../styles/index.css';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#330704',\r\n    border: '1px solid',\r\n    borderColor: '#000',\r\n    '&:hover': {\r\n      backgroundColor: '#440704',\r\n      color: '#FFF',\r\n      border: '1px solid',\r\n      borderColor: '#FFF'\r\n  }\r\n  },\r\n}));\r\n\r\nconst StopButton = (props) => {\r\n\r\n  const classes = useStyles();\r\n    return(\r\n      <>\r\n           <Button \r\n           variant=\"contained\"\r\n           color=\"secondary\"\r\n           className={classes.button}\r\n           startIcon={<StopIcon/>}\r\n           disabled={!props.isPlaying}\r\n           onClick={props.onClick}>Stop</Button>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default StopButton;","import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles({\r\n  colorPicker: {\r\n    margin: '1rem',\r\n    padding: 0,\r\n    width: '50px',\r\n    height: '50px',\r\n    outline: 'none',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n});\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nexport default createUseStyles({\r\n  app: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontFamily: 'sans-serif',\r\n  },\r\n  colorSwatchContainer: {\r\n    display: 'flex',\r\n  },\r\n  colorSwatch: {\r\n    margin: '0.5rem',\r\n    padding: 0,\r\n    width: '25px',\r\n    height: '25px',\r\n    outline: 'none',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n  chatString: {\r\n    maxWidth: '50%',\r\n    fontFamily: 'monospace',\r\n    wordWrap: 'break-word',\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nimport useStyles from './ColorPicker.styles';\r\n\r\nconst ColorPicker = ({ currentColor, onSetColor }) => {\r\n  const classes = useStyles();\r\n  const colorChange = (event) => {\r\n    onSetColor(event.target.value);\r\n  };\r\n  return (\r\n    <input\r\n      className={classes.colorPicker}\r\n      type=\"color\"\r\n      value={currentColor}\r\n      onChange={colorChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ColorPicker;","// import React from 'react'\r\n\r\n// function Maker() {\r\n//     return (\r\n//         <div>\r\n//             hi\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Maker\r\nimport React, { useEffect, useState ,useMemo, useRef} from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport html2canvas from 'html2canvas';\r\nimport '../styles/index.css';\r\nimport '../styles/playhead.css';\r\nimport BeatMachine from '../Components/BeatMachine';\r\nimport InstrumentRow from '../Components/InstrumentRow';\r\nimport Bpm from '../helpers/useBPM';\r\n\r\nimport Tempo from '../Components/Tempo';\r\nimport { instruments } from '../helpers/instruments';\r\nimport PlayButton from '../Components/PlayButton';\r\nimport StopButton from '../Components/StopButton';\r\nimport { Howl } from 'howler';\r\nimport useStyles from '../App.styles';\r\nimport { Fragment } from 'react';\r\nimport { exportComponentAsPNG } from \"react-component-export-image\"\r\nimport ColorPicker from '../Components/ColorPicker.js';\r\n\r\nconst arr1= Array.from(Array(16), () => new Array(32).fill(0));\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n\r\n\r\n  const myPortalContainer = document.getElementById(\"portal\");\r\n  const myCanvas = document.querySelector(\"div#portal canvas\");\r\n\r\n\r\n  const panelRef = useRef()\r\n\r\n  const [selectedColor, setColor] = useState(\"000000\");\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function changeColor(color) {\r\n    setColor(color.hex);\r\n  }\r\n  //beat machine initial states\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [tempo, setTempo] = useState(120);\r\n\r\n  const [squares, setSquares] = useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,]);\r\n  // state tracking for our dumb component when !isPlaying\r\n  const [playHeadArray, setPlayHeadArray] = useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,]);\r\n  const [counter, setCounter] = useState(0);\r\n  // holds on off state for each row of instruments\r\n  const [grid, setGrid] = useState([\r\n    instruments[0].pattern,\r\n    instruments[1].pattern,\r\n    instruments[2].pattern,\r\n    instruments[3].pattern,\r\n    instruments[4].pattern,\r\n    instruments[5].pattern,\r\n    instruments[6].pattern,\r\n    instruments[7].pattern,\r\n    instruments[8].pattern,\r\n    instruments[9].pattern,\r\n    instruments[10].pattern,\r\n    instruments[11].pattern,\r\n    instruments[12].pattern,\r\n    instruments[13].pattern,    \r\n    instruments[14].pattern,\r\n    instruments[15].pattern,\r\n  ]);\r\n\r\n  // TODO: Refactor player controls into helpers\r\n  const togglePlay = () => {\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  //set BPM\r\n  let beats = Bpm(tempo);\r\n\r\n  //ParseInt() as tempo field currently a string\r\n  const handleTempoChange = (event) => {\r\n    const eventValue = event.target.value;\r\n    setTempo(parseInt(eventValue));\r\n  };\r\n\r\n\r\n\r\n\r\n  //Animation Specific functions\r\n  //helper function for playHeadLoop()\r\n  const getPreviousSquare = () => {\r\n    if (counter === 0) {\r\n      return document.getElementById('31');\r\n    } else {\r\n      return document.getElementById(`${counter - 1}`);\r\n    }\r\n  };\r\n\r\n  // animates playhead based off the counter position\r\n  const playHeadLoop = () => {\r\n    //get the square to animate\r\n    let squareToAnimate = document.getElementById(`${counter}`);\r\n    //find previousSquare\r\n    let previousSquare = getPreviousSquare();\r\n    //TODO Re-factor into one toggle\r\n    previousSquare.classList.remove('playhead');\r\n    previousSquare.classList.add('inactive');\r\n    squareToAnimate.classList.remove('inactive');\r\n    squareToAnimate.classList.add('playhead');\r\n  };\r\n\r\n  //when player is stopped reset playhead and array to initial values\r\n  const resetSquares = () => {\r\n    setCounter(0);\r\n    setPlayHeadArray(\r\n      squares.map((square, i) => (\r\n        <td\r\n          key={i + squares}\r\n          id={i}\r\n          className={square > 0 ? 'playhead' : 'inactive cycle'}\r\n        ></td>\r\n      ))\r\n    );\r\n  };\r\n\r\n  //handles any changes user makes to instrument grid and updates values accordingly\r\n  const updateGrid = (row, column, toggle,color) => {\r\n    const clonedObj = { ...grid[row] };\r\n    clonedObj[column] = toggle;\r\n    //temporary const for setGrid\r\n    const arrayToPassSetGrid = [];\r\n    for (let i = 0; i < 16; i++) {\r\n      if (row === i) {\r\n        arrayToPassSetGrid.push(clonedObj);\r\n      } else {\r\n        arrayToPassSetGrid.push(grid[i]);\r\n      }\r\n    }\r\n\r\n    arr1[row].splice(column,1,color)\r\n    setGrid(arrayToPassSetGrid);\r\n    console.log(arr1)\r\n    console.log(grid)\r\n\r\n  };\r\n\r\n  //play an individual sound from our array from PlaySounds()\r\n  const playSound = (source) => {\r\n    var sound = new Howl({\r\n      src: [source],\r\n      html5: true,\r\n\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  //Iterate through the array of collected sounds compiled from our grid in loop()\r\n  const playSounds = (array) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n      playSound(array[i]);\r\n    }\r\n  };\r\n\r\n  //collate all active sound samples on the current beat into an array from instruments\r\n  const loop = () => {  \r\n    //create an array to hold our sounds for a beat\r\n    let soundArr = [];\r\n    //loop through each instrument in our column\r\n    for (let j = 0; j < 15; j++) {\r\n      //if the square is active e.g. 0,0\r\n      if (grid[j][counter]) {\r\n        //set a temporary variable to hold our soundSrc\r\n        let soundSrc =instruments[j].sound;\r\n            //e.g. \"./DrumSamples/ClosedHats/HiHat01.wav\"\r\n        soundArr.push(soundSrc);\r\n      }\r\n      playSounds(soundArr);\r\n    }\r\n  };\r\n\r\n  //useEffect re-renders and runs our beat machine functions if IsPlaying per tick of setInterval\r\n  useEffect(() => {\r\n    //is the beat machine playing?\r\n    if (isPlaying) {\r\n      //set an interval to perform player logic\r\n      const interval = setInterval(() => {\r\n        //animate the playHead based on counter positionc\r\n        playHeadLoop();\r\n        // create an array of up to 6 sounds that are then played at the same time\r\n        loop();\r\n        // increments counter based on current tempo\r\n        if (counter < 31) {\r\n          setCounter((prevState) => ++prevState);\r\n        } else {\r\n          setCounter(0);\r\n        }\r\n      }, beats);\r\n      return () => clearInterval(interval);\r\n    }\r\n    resetSquares();\r\n  }, [isPlaying, beats, counter]);\r\n \r\n\r\n  //Map each instrumentRow onto the beat machine\r\n  const instrumentRows = instruments.map((instrument, row ) => {\r\n    return (\r\n      <InstrumentRow\r\n      \r\n        key={row}\r\n        row={row}\r\n        updateGrid={(row, column, toggle,color) => updateGrid(row, column, toggle,color)}\r\n        instrumentName={instrument.name}\r\n        instrumentSound={instrument.sound}\r\n        pattern={instrument.pattern}\r\n        instrumentColor={selectedColor}\r\n      />\r\n    );\r\n  });\r\n  \r\n\r\n  //Conditionally Render Playhead if isPlaying\r\n  const playHead = () => {\r\n    if (isPlaying) {\r\n      return (\r\n        <>\r\n          <td className=\"instrument\" />\r\n          {playHeadArray}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <td className={isPlaying ? 'hidden' : 'instrument'} />\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n          <td className=\"inactive\"></td>\r\n        </>\r\n      );\r\n    }\r\n\r\n\r\n\r\n  };\r\n  const handleClick = () => {\r\n    \r\n    console.log(arr1)\r\n    alert('Creating NFT!')\r\n    \r\n    html2canvas(document.getElementById(\"table\"), {\r\n      onrendered: function (canvas) {\r\n       const a= canvas.toDataURL();\r\n       console.log(a);\r\n\r\n      },\r\n      width:320,\r\n      height:220\r\n  });\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n  //store playHeadComponent in a variable for readability\r\n  const playHeadComponent = playHead();\r\n\r\n  //App returns the composite of our beat machine and components\r\n  return (\r\n    <Fragment>\r\n\r\n    <div className=\"container\">\r\n      <div className=\"titleImg\">\r\n\r\n \r\n      </div>\r\n      <div className=\"btnGroup\">\r\n        <PlayButton onClick={togglePlay} isPlaying={isPlaying} />\r\n        <StopButton onClick={togglePlay} isPlaying={isPlaying} />\r\n      </div>\r\n      <br />\r\n      <div className=\"volTempo\">\r\n        <div className=\"volStyle\">\r\n    \r\n        </div>\r\n        <div className=\"tempoStyle\">\r\n          <Tempo\r\n            value={tempo}\r\n            onTempoChange={(event) => {\r\n              handleTempoChange(event);\r\n            }}\r\n          />\r\n        </div>\r\n        <div id=\"a\">\r\n    \r\n\r\n{/* <SwatchesPicker color={selectedColor} onChangeComplete={changeColor} />  */}\r\n<ColorPicker  color={selectedColor} onChangeComplete={changeColor} onSetColor={setColor} />\r\n\r\n</div></div>\r\n      <br />\r\n      <table border=\"0\">\r\n        <tbody id=\"table\"  ref={panelRef}>\r\n          {playHeadComponent}\r\n          {instrumentRows}\r\n         \r\n        </tbody>\r\n      </table>\r\n    \r\n    <div>\r\n    <Button\r\n    style={{ background: \"ffffff\", padding: '27px' }}\r\n    \r\n    onClick={() =>{ handleClick();}}>Create\r\n      </Button>\r\n    </div>\r\n\r\n    </div>\r\n    </Fragment>\r\n  );\r\n\r\n\r\n  \r\n};\r\n\r\nexport default Home;\r\n\r\n","// returns the length of time in milliseconds for a sixteenth note \r\n//(i.e. the smallest division in the beat machine - one square of time)\r\n// Formula for working out BPM 60(seconds in a minute) * 1000 (1 second) = 60000ms in a minute / 4 steps per beat / beats per minute\r\n//60 * 1000/4/120 = 125ms\r\nexport default function useBPM(bpm) {\r\n  return (60 * 1000 / 4) / bpm;\r\n}","import React from \"react\";\r\nimport {Link,withRouter} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n\r\n\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    \r\n    background-color: rgba(155, 91, 166, 0.43);\r\n    padding : 0px 10px;\r\n\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n\r\n`;\r\nconst List = styled.ul`\r\n  display: flex;`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid \r\n  ${props => props.current ? \"#3498db\":\"transparent\"};\r\n  transition:border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport default withRouter(({location:{pathname}})=>(\r\n    <Header>\r\n    <List>\r\n    <Item current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Item>\r\n    <Item current={pathname === \"/maker\"}><SLink to=\"/maker\">Maker</SLink></Item>\r\n    <Item current={pathname === \"/search\"}><SLink to=\"/search\">Search</SLink></Item>\r\n    \r\n    </List>\r\n    </Header>));\r\n\r\n","import React, { useEffect } from 'react';\r\nimport '../styles/index.css';\r\nimport {Howl, Howler} from 'howler';\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n      <>\r\n        <div className=\"beatMachineTitle\"><span className=\"beat\"> </span><span className=\"juice\">Pixorie</span></div>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Header;","import React from \"react\";\r\nimport {BrowserRouter as Router,Redirect,Route,Switch} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home\";\r\nimport Search from \"../Routes/Search\";\r\nimport Maker from \"../Routes/Maker\";\r\nimport Menubar from \"./Menubar\";\r\nimport Header from \"./Header\";\r\nexport default ()=>(\r\n    <Router>\r\n       <>\r\n      <Header/>\r\n      <Menubar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/maker\" component={Maker} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:white;\r\n        color:black;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, {Component} from \"react\";\r\nimport Router from \"./Router\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nclass App extends Component {\r\n  render (){\r\n    return (<>\r\n    \r\n    <Router/>\r\n    <GlobalStyles/>\r\n    </>);\r\n\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './Components/App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}